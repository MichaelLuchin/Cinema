
#include <locale>
#include <iostream>
#include <string> 
#include <vector>
#include <set>
using namespace std;
// Типы сидений
enum struct Seat : unsigned char {
    // нет места (дырка)
    None,
    // занято
    Occupied,
    // обычное место
    Regular,
    // вип место дороже
    Vip,
    // диванчик стоит как вип место, но если
    // они стоят подряд, то их можно купить
    // только все разом
    Sofa,
};

struct Snack {
    // придумайте какие поля имеют снэки
    // название и цена или ещё что-то?
    // написать максиму для хранения этого в файле
};

struct Movie {
    // название фильма
    string Title;
    // время начала в минутах от начала суток
    int StartTime;
    // длительность в минутах
    int Duration;
    // множитель цены сидений
    int PriceCoefficient;
    // снэки
    vector<Snack> Snacks;
    // кинозал - вектор рядов (векторов) сидений
    //vector<Seat> Row;
    vector<vector<Seat>> Hall;
    void generate_random_hall(int w, int h, set<Seat> seat_types =
        {
            Seat::None, Seat::Occupied, Seat::Regular,
            Seat::Sofa, Seat::Vip
        })
    {
        srand(time(0));
        this->Hall.resize(h);
        for (auto& r : this->Hall)
        {
            r.resize(w);
            for (auto& v : r)
                v = Seat(rand() % seat_types.size());
        }
    }
    void output_seats(Seat v, int& q)
    {
        switch (v)
        {
        case Seat::None:
            cout << "  ";
            for (int i = 0; i < to_string(q).length(); ++i)
                cout << " ";
            break;
        case Seat::Occupied:
            cout << "[";
            for (int i = 0; i < to_string(q).length(); ++i)
                cout << "#";
            cout << "]";
            break;
        case Seat::Regular:
            cout << "[" << q << "]";
            break;
        case Seat::Vip:
            cout << "{" << q << "}";
            break;
        case Seat::Sofa:
            cout << "(" << q << ")";
            break;
        }
    }
};
void output_hall(int rows, Movie movie)
{
    int j = 0;
    for (int i = 0; i < rows; ++i)
    {
        cout << " || ";
        if (rows >= 9 && i < 9)
            cout << " ";
        cout << 1 + i << ": ";
        int q = 1;
        for (auto& v : movie.Hall[i])
        {
            movie.output_seats(v, q);
            ++q;
        }
        cout << "  ||\n";
    }
}
int sum_s(int kolvo);

void choose_Snack() 
{
    std::string Answer;
    int kolvo;
    int choise;
    int end_sum = 0;

    int sum1 = 50;


    std::cout << "Выберете снеки: Шоколад, Попкорн, Чипсы, Сырные палочки, Печенье, Орешки, Сухофрукты " << std::endl;
    std::cout << "1) Шоколад: 50 рублей" << std::endl;
    std::cout << "2) Попкорн: 50 рублей" << std::endl;
    std::cout << "3) Чипсы: 50 рублей" << std::endl;
    std::cout << "4) Сырные палочки: 50 рублей" << std::endl;
    std::cout << "5) Печение: 50 рублей" << std::endl;
    std::cout << "6) Орешки: 50 рублей" << std::endl;
    std::cout << "7) Сухофрукты: 50 рублей" << std::endl;

    do 
    {

        std::cout << "Выберете желаемый снек " << std::endl;
        std::cin >> choise;
        std::cout << "Выберете количество снеков, того вида который вы выбрали" << std::endl;
        std::cin >> kolvo;

        switch (choise) 
        {
        case 1:
            std::cout << "Вы выбрали Шоколад," << " - количество снеков этого вида " << kolvo << std::endl;
            break;
        case 2:
            std::cout << "Вы выбрали Попкорн" << " -  количество снеков этого вида " << kolvo << std::endl;
            break;
        case 3:
            std::cout << "Вы выбрали Чипсы" << " -  количество снеков этого вида " << kolvo << std::endl;
            break;
        case 4:
            std::cout << "Вы выбрали Сырные палочки" << " -  количество снеков этого вида " << kolvo << std::endl;
            break;
        case 5:
            std::cout << "Вы выбрали Печенье" << " -  количество снеков этого вида " << kolvo << std::endl;
            break;
        case 6:
            std::cout << "Вы выбрали Орешки" << " -  количество снеков этого вида " << kolvo << std::endl;
            break;
        case 7:
            std::cout << "Вы выбрали Сухофрукты" << " -  количество снеков этого вида " << kolvo << std::endl;
            break;
        default:
            std::cout << "Снеков, которые вы хотите нет в наличии" << std::endl;
            break;
        }
        int f_sum = sum_s(kolvo);
        end_sum = end_sum + f_sum;

        std::cout << "Ваша итоговая стоимость " << f_sum << std::endl;

        std::cout << "Хотели бы выбрать что-нибудь ещё? " << std::endl;
        std::cin >> Answer;
    } while (Answer == "Y" || Answer == "y");

    std::cout << "К оплате у вас: " << end_sum << " рублей" << std::endl;

}
void kassir()
{
    cout <<
        "                                                       :l'''''''''''''''l;   " << endl <<
        "                        .,,'''''','.                   :;  ...'.......  ;; " << endl <<
        "                      .;:'       .',;'                 :;  ',,;'.',,'.  :;  " << endl <<
        "                    .;:.   ..'''..  .;:.               cl.''''',,''','.'l;  " << endl <<
        "                   'c.  .,;,'..',;;'  .c'              oNNNNNNNNNNNNNNNNX:  " << endl <<
        "                   :;  .c,.       .:;. .c.             lWMMMMMMMMMMMMMMMN: " << endl <<
        "                   :; .c, .c.   .:'.c;  ;:             o0kkkkkkkkkkkkkkO0:  " << endl <<
        "                   c, .c'           ::  .c'            :;               :; " << endl <<
        "                  .c,  ::          .c'   ;:            :;               ;; " << endl <<
        "                  .c'  .;c         c.    ,c.           ::...............c;          " << endl <<
        "                  .c.    .c'  .  'c.     'c.                                                " << endl <<
        "                  'c.     ::     :l.     'c. " << endl <<
        "                  ,c. .',,,.     .',;;,. ,c. " << endl <<
        "                  :d:,:d;           .ll,,dl. " << endl <<
        "               .;;;'. .c,           .c,  ,::;.        " << endl <<
        "              .c;     .ll,,,,,,,,,,,:o,    .l'          ...,;,'....       " << endl <<
        "              ,c.     .c;...........'l,     :;        .coccc;;ccccl;                    " << endl <<
        "             .c'      .c,           .c,     'c;.      .coccc;;ccccl;                   " << endl <<
        "             ;:       .c,           .c,     .cx,      .coccc;;ccccl; " << endl <<
        "      ....;l,.........,c;...........,oc........'c;......cxx::d;..:o:.....                " << endl <<
        "      :o,''',,,,,,,,,''''',,,,,,,,,',:;','',,'''''',,,,',,;,,;,'',,,,'':o' " << endl <<
        "      :o,''',,,,,,,,,''''',,,,,,,,,',:;','',,'''''',,,,',,;,,;,'',,,,'':o' " << endl <<
        "      :o,''',,,,,,,,,''''',,,,,,,,,',:;','',,'''''',,,,',,;,,;,'',,,,'':o' " << endl <<
        "      ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccl, " << endl;
}
int sum_s(int kolvo) {
    int sum = kolvo * 50;
    return sum;
}
int main()
{
    setlocale(LC_ALL, "Russian");
    kassir();
    choose_Snack();
    int row_seats = 10, rows = 10;
    Movie movie;
    movie.generate_random_hall(row_seats, rows);
    output_hall(rows, movie);
}
